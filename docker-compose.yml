version: "3.9"

services:
  shard0:
    image: postgres:16-alpine
    container_name: shard0
    environment:
      POSTGRES_PASSWORD: replicator
      POSTGRES_DB: app
      POSTGRES_USER: replicator
    ports:
      - "5433:5432"
    volumes:
      - ./init-shard-0.sql:/docker-entrypoint-initdb.d/init.sql
    command: >
      postgres
      -c wal_level=logical
      -c max_wal_senders=10
      -c max_replication_slots=10
      -c shared_buffers=256MB
      -c max_worker_processes=10
      -c max_logical_replication_workers=4
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U replicator -d app"]
      interval: 5s
      timeout: 5s
      retries: 5

  shard1:
    image: postgres:16-alpine
    container_name: shard1
    environment:
      POSTGRES_PASSWORD: replicator
      POSTGRES_DB: app
      POSTGRES_USER: replicator
    ports:
      - "5434:5432"
    volumes:
      - ./init-shard-1.sql:/docker-entrypoint-initdb.d/init.sql
    command: >
      postgres
      -c wal_level=logical
      -c max_wal_senders=10
      -c max_replication_slots=10
      -c shared_buffers=256MB
      -c max_worker_processes=10
      -c max_logical_replication_workers=4
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U replicator -d app"]
      interval: 5s
      timeout: 5s
      retries: 5

  shard2:
    image: postgres:16-alpine
    container_name: shard2
    environment:
      POSTGRES_PASSWORD: replicator
      POSTGRES_DB: app
      POSTGRES_USER: replicator
    ports:
      - "5435:5432"
    volumes:
      - ./init-shard-2.sql:/docker-entrypoint-initdb.d/init.sql
    command: >
      postgres
      -c wal_level=logical
      -c max_wal_senders=10
      -c max_replication_slots=10
      -c shared_buffers=256MB
      -c max_worker_processes=10
      -c max_logical_replication_workers=4
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U replicator -d app"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  default:
    name: postgres-cluster
